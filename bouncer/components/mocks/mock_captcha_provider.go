// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kdwils/envoy-proxy-bouncer/bouncer/components (interfaces: CaptchaProvider)
//
// Generated by this command:
//
//	mockgen -destination=mocks/mock_captcha_provider.go -package=mocks github.com/kdwils/envoy-proxy-bouncer/bouncer/components CaptchaProvider
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockCaptchaProvider is a mock of CaptchaProvider interface.
type MockCaptchaProvider struct {
	ctrl     *gomock.Controller
	recorder *MockCaptchaProviderMockRecorder
	isgomock struct{}
}

// MockCaptchaProviderMockRecorder is the mock recorder for MockCaptchaProvider.
type MockCaptchaProviderMockRecorder struct {
	mock *MockCaptchaProvider
}

// NewMockCaptchaProvider creates a new mock instance.
func NewMockCaptchaProvider(ctrl *gomock.Controller) *MockCaptchaProvider {
	mock := &MockCaptchaProvider{ctrl: ctrl}
	mock.recorder = &MockCaptchaProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCaptchaProvider) EXPECT() *MockCaptchaProviderMockRecorder {
	return m.recorder
}

// GetProviderName mocks base method.
func (m *MockCaptchaProvider) GetProviderName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProviderName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetProviderName indicates an expected call of GetProviderName.
func (mr *MockCaptchaProviderMockRecorder) GetProviderName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProviderName", reflect.TypeOf((*MockCaptchaProvider)(nil).GetProviderName))
}

// Verify mocks base method.
func (m *MockCaptchaProvider) Verify(ctx context.Context, response, remoteIP string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Verify", ctx, response, remoteIP)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Verify indicates an expected call of Verify.
func (mr *MockCaptchaProviderMockRecorder) Verify(ctx, response, remoteIP any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Verify", reflect.TypeOf((*MockCaptchaProvider)(nil).Verify), ctx, response, remoteIP)
}
